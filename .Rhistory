geom_bar(stat = "identity", fill = "blue") +
ggtitle("Best Center/Defensive Player") +
xlab("Player") +
ylab("Average (SPG, BPG, RPG)") +
coord_flip()
# Create the plot for forwards
plot_forwards <- ggplot(df_forwards, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "green") +
ggtitle("Best Forward/Offensive Player") +
xlab("Player") +
ylab("Average (PPG, APG, TPG)") +
coord_flip()
# Print the plots
print(plot_centers)
rm(list = ls())
library(readr)
library(ggplot2)
setwd("C:/Users/nazif/Desktop/")
df <- read_csv("C:/Users/nazif/Desktop/nbastats.csv")
player_data <- read.csv("nbastats.csv", stringsAsFactors = FALSE)
# Finding the 'POS' column and filtering the data accordingly
pos_index <- which(names(player_data) == "POS")
centers <- player_data[player_data$POS == "C", ]
forwards <- player_data[player_data$POS == "F", ]
# creating a list for the centers/defensive players
center_stats_list <- list()
for (i in 1:nrow(centers)) {
player <- centers[i, ]
avg_stats <- colMeans(player[c("SPG", "BPG", "RPG")], na.rm = TRUE)
player_name <- player$NAME
# Average of SPG, BPG, and RPG
avg_combined <- mean(avg_stats)
center_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
center_stats_sorted <- center_stats_list[order(sapply(center_stats_list, function(x) x[2]), decreasing = TRUE)]
# Print the top 3 players with their averages
cat("Top 3 Centers:\n")
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, center_stats_sorted[[i]][1], center_stats_sorted[[i]][2]))
}
# Initialize an empty list to store individual forward stats
forward_stats_list <- list()
# Loop through each forward player and calculate their average statistics
for (i in 1:nrow(forwards)) {
player <- forwards[i, ]
avg_stats <- colMeans(player[c("PPG", "APG", "TPG")], na.rm = TRUE)
player_name <- player$NAME
# Calculate the average of PPG, APG, and TS%
avg_combined <- mean(avg_stats)
forward_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
forward_stats_sorted <- forward_stats_list[order(sapply(forward_stats_list, function(x) x[2]), decreasing = TRUE)]
# Print the top 3 players with their averages
cat("\nTop 3 Forwards:\n")
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, forward_stats_sorted[[i]][1], forward_stats_sorted[[i]][2]))
}
# Create data frames showing the averages for center and forward players
df_centers <- data.frame(Player = sapply(center_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(center_stats_sorted, `[[`, 2)))
df_forwards <- data.frame(Player = sapply(forward_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(forward_stats_sorted, `[[`, 2)))
# Create the plot for centers
plot_centers <- ggplot(df_centers, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Best Center/Defensive Player") +
xlab("Player") +
ylab("Average (SPG, BPG, RPG)") +
coord_flip()
# Create the plot for forwards
plot_forwards <- ggplot(df_forwards, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "green") +
ggtitle("Best Forward/Offensive Player") +
xlab("Player") +
ylab("Average (PPG, APG, TPG)") +
coord_flip()
# Filter forwards whose average is greater than 5
df_forwards_filtered <- df_forwards[df_forwards$Average > 5, ]
# Create the plot for forwards
plot_forwards <- ggplot(df_forwards_filtered, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "green") +
ggtitle("Best Forward/Offensive Player (Average > 5)") +
xlab("Player") +
ylab("Average (PPG, APG, TPG)") +
coord_flip()
# Print the plot
print(plot_forwards)
View(center_stats_list)
View(center_stats_sorted)
View(centers)
View(df)
View(df_centers)
View(df_forwards)
View(df_forwards_filtered)
View(forward_stats_list)
View(forward_stats_sorted)
View(forwards)
View(player)
View(player_data)
View(plot_centers)
View(plot_forwards)
# Print the plots
print(plot_centers)
rm(list = ls())
library(readr)
library(ggplot2)
# Set the working directory if needed
setwd("C:/Users/nazif/Desktop/")
# Read the CSV file using read_csv from readr package
df <- read_csv("C:/Users/nazif/Desktop/nbastats.csv")
# Read the CSV file using read.csv
player_data <- read.csv("nbastats.csv", stringsAsFactors = FALSE)
# Find the index of the 'POS' column
pos_index <- which(names(player_data) == "POS")
# Filter the data to include only players with 'C' in the 'POS' column
centers <- player_data[player_data$POS == "C", ]
# Filter the data to include only players with 'F' in the 'POS' column
forwards <- player_data[player_data$POS == "F", ]
# Initialize an empty list to store individual center stats
center_stats_list <- list()
# Loop through each center player and calculate their average statistics
for (i in 1:nrow(centers)) {
player <- centers[i, ]
avg_stats <- colMeans(player[c("SPG", "BPG", "RPG")], na.rm = TRUE)
player_name <- player$NAME
# Calculate the average of SPG, BPG, and RPG
avg_combined <- mean(avg_stats)
center_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
center_stats_sorted <- center_stats_list[order(sapply(center_stats_list, function(x) x[2]), decreasing = TRUE)]
# Print the top 3 players with their averages
cat("Top 3 Centers:\n")
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, center_stats_sorted[[i]][1], center_stats_sorted[[i]][2]))
}
# Initialize an empty list to store individual forward stats
forward_stats_list <- list()
# Loop through each forward player and calculate their average statistics
for (i in 1:nrow(forwards)) {
player <- forwards[i, ]
avg_stats <- colMeans(player[c("PTS", "AST", "TPG")], na.rm = TRUE)  # Adjusted column names
player_name <- player$NAME
# Calculate the average of PTS, AST, and TPG
avg_combined <- mean(avg_stats)
forward_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
forward_stats_sorted <- forward_stats_list[order(sapply(forward_stats_list, function(x) x[2]), decreasing = TRUE)]
rm(list = ls())
library(readr)
library(ggplot2)
# Set the working directory if needed
setwd("C:/Users/nazif/Desktop/")
# Read the CSV file using read_csv from readr package
df <- read_csv("C:/Users/nazif/Desktop/nbastats.csv")
# Read the CSV file using read.csv
player_data <- read.csv("nbastats.csv", stringsAsFactors = FALSE)
# Find the index of the 'POS' column
pos_index <- which(names(player_data) == "POS")
# Filter the data to include only players with 'C' in the 'POS' column
centers <- player_data[player_data$POS == "C", ]
# Filter the data to include only players with 'F' in the 'POS' column
forwards <- player_data[player_data$POS == "F", ]
# Initialize an empty list to store individual center stats
center_stats_list <- list()
# Loop through each center player and calculate their average statistics
for (i in 1:nrow(centers)) {
player <- centers[i, ]
avg_stats <- colMeans(player[c("SPG", "BPG", "RPG")], na.rm = TRUE)
player_name <- player$NAME
# Calculate the average of SPG, BPG, and RPG
avg_combined <- mean(avg_stats)
center_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
center_stats_sorted <- center_stats_list[order(sapply(center_stats_list, function(x) x[2]), decreasing = TRUE)]
# Print the top 3 players with their averages
cat("Top 3 Centers:\n")
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, center_stats_sorted[[i]][1], center_stats_sorted[[i]][2]))
}
# Initialize an empty list to store individual forward stats
forward_stats_list <- list()
# Loop through each forward player and calculate their average statistics
for (i in 1:nrow(forwards)) {
player <- forwards[i, ]
avg_stats <- colMeans(player[c("PPG", "APG", "TPG")], na.rm = TRUE)  # Adjusted column names
player_name <- player$NAME
# Calculate the average of PTS, AST, and TPG
avg_combined <- mean(avg_stats)
forward_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
forward_stats_sorted <- forward_stats_list[order(sapply(forward_stats_list, function(x) x[2]), decreasing = TRUE)]
# Filter forwards whose average is greater than 5
df_forwards_filtered <- data.frame(Player = sapply(forward_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(forward_stats_sorted, `[[`, 2)))
df_forwards_filtered <- df_forwards_filtered[df_forwards_filtered$Average > 5, ]
# Sort the dataframe by Average in descending order
df_forwards_filtered <- df_forwards_filtered[order(df_forwards_filtered$Average, decreasing = TRUE), ]
# Print the top 3 players with their averages
cat("\nTop 3 Forwards:\n")
top_3_forwards <- head(df_forwards_filtered, 3)
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, top_3_forwards$Player[i], top_3_forwards$Average[i]))
}
# Create data frames showing the averages for center and forward players
df_centers <- data.frame(Player = sapply(center_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(center_stats_sorted, `[[`, 2)))
df_forwards <- data.frame(Player = df_forwards_filtered$Player,
Average = df_forwards_filtered$Average)
# Create the plot for centers
plot_centers <- ggplot(df_centers, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Best Center/Defensive Player") +
xlab("Player") +
ylab("Average (SPG, BPG, RPG)") +
coord_flip()
# Create the plot for forwards
plot_forwards <- ggplot(df_forwards, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "green") +
ggtitle("Best Forward/Offensive Player (Average > 5)") +
xlab("Player") +
ylab("Average (PPG, APG, TPG)") +
coord_flip()
# Print the plots
print(plot_centers)
print(plot_forwards)
rm(list = ls())
library(readr)
library(ggplot2)
setwd("C:/Users/nazif/Desktop/")
df <- read_csv("C:/Users/nazif/Desktop/nbastats.csv")
# filtering through the columns and rows
player_data <- read.csv("nbastats.csv", stringsAsFactors = FALSE)
pos_index <- which(names(player_data) == "POS")
centers <- player_data[player_data$POS == "C", ]
forwards <- player_data[player_data$POS == "F", ]
center_stats_list <- list()
# made a loop to calculate centers average statistics
for (i in 1:nrow(centers)) {
player <- centers[i, ]
avg_stats <- colMeans(player[c("SPG", "BPG", "RPG")], na.rm = TRUE)
player_name <- player$NAME
avg_combined <- mean(avg_stats)
center_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
center_stats_sorted <- center_stats_list[order(sapply(center_stats_list, function(x) x[2]), decreasing = TRUE)]
# Print the top 3 players with their averages
cat("Top 3 Centers:\n")
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, center_stats_sorted[[i]][1], center_stats_sorted[[i]][2]))
}
# Initialize an empty list to store individual forward stats
forward_stats_list <- list()
# Loop through each forward player and calculate their average statistics
for (i in 1:nrow(forwards)) {
player <- forwards[i, ]
avg_stats <- colMeans(player[c("PPG", "APG", "TPG")], na.rm = TRUE)  # Adjusted column names
player_name <- player$NAME
# Calculate the average of PTS, AST, and TPG
avg_combined <- mean(avg_stats)
forward_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
forward_stats_sorted <- forward_stats_list[order(sapply(forward_stats_list, function(x) x[2]), decreasing = TRUE)]
# Filter forwards whose average is greater than 5
df_forwards_filtered <- data.frame(Player = sapply(forward_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(forward_stats_sorted, `[[`, 2)))
df_forwards_filtered <- df_forwards_filtered[df_forwards_filtered$Average > 5, ]
# Sort the dataframe by Average in descending order
df_forwards_filtered <- df_forwards_filtered[order(df_forwards_filtered$Average, decreasing = TRUE), ]
# Print the top 3 players with their averages
cat("\nTop 3 Forwards:\n")
top_3_forwards <- head(df_forwards_filtered, 3)
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, top_3_forwards$Player[i], top_3_forwards$Average[i]))
}
# Create data frames showing the averages for center and forward players
df_centers <- data.frame(Player = sapply(center_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(center_stats_sorted, `[[`, 2)))
df_forwards <- data.frame(Player = df_forwards_filtered$Player,
Average = df_forwards_filtered$Average)
# Create the plot for centers
plot_centers <- ggplot(df_centers, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Best Center/Defensive Player") +
xlab("Player") +
ylab("Average (SPG, BPG, RPG)") +
coord_flip()
# Create the plot for forwards
plot_forwards <- ggplot(df_forwards, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "green") +
ggtitle("Best Forward/Offensive Player (Average > 5)") +
xlab("Player") +
ylab("Average (PPG, APG, TPG)") +
coord_flip()
# Print the plots
print(plot_centers)
print(plot_forwards)
rm(list = ls())
library(readr)
library(ggplot2)
setwd("C:/Users/nazif/Desktop/")
df <- read_csv("C:/Users/nazif/Desktop/nbastats.csv")
# filtering through the columns and rows
player_data <- read.csv("nbastats.csv", stringsAsFactors = FALSE)
pos_index <- which(names(player_data) == "POS")
centers <- player_data[player_data$POS == "C", ]
forwards <- player_data[player_data$POS == "F", ]
center_stats_list <- list()
# made a loop to calculate centers average statistics
for (i in 1:nrow(centers)) {
player <- centers[i, ]
avg_stats <- colMeans(player[c("SPG", "BPG", "RPG")], na.rm = TRUE)
player_name <- player$NAME
avg_combined <- mean(avg_stats)
center_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
#sorted and printed averages in new list
center_stats_sorted <- center_stats_list[order(sapply(center_stats_list, function(x) x[2]), decreasing = TRUE)]
cat("Top 3 Centers:\n")
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, center_stats_sorted[[i]][1], center_stats_sorted[[i]][2]))
}
# repeating the same process for all forwards
forward_stats_list <- list()
# Loop through each forward player and calculate their average statistics
for (i in 1:nrow(forwards)) {
player <- forwards[i, ]
avg_stats <- colMeans(player[c("PPG", "APG", "TPG")], na.rm = TRUE)  # Adjusted column names
player_name <- player$NAME
# Calculate the average of PTS, AST, and TPG
avg_combined <- mean(avg_stats)
forward_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
# Sort the list by the Average value
forward_stats_sorted <- forward_stats_list[order(sapply(forward_stats_list, function(x) x[2]), decreasing = TRUE)]
# Filter forwards whose average is greater than 5
df_forwards_filtered <- data.frame(Player = sapply(forward_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(forward_stats_sorted, `[[`, 2)))
df_forwards_filtered <- df_forwards_filtered[df_forwards_filtered$Average > 5, ]
# Sort the dataframe by Average in descending order
df_forwards_filtered <- df_forwards_filtered[order(df_forwards_filtered$Average, decreasing = TRUE), ]
# Print the top 3 players with their averages
cat("\nTop 3 Forwards:\n")
top_3_forwards <- head(df_forwards_filtered, 3)
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, top_3_forwards$Player[i], top_3_forwards$Average[i]))
}
# Create data frames showing the averages for center and forward players
df_centers <- data.frame(Player = sapply(center_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(center_stats_sorted, `[[`, 2)))
df_forwards <- data.frame(Player = df_forwards_filtered$Player,
Average = df_forwards_filtered$Average)
# Create the plot for centers
plot_centers <- ggplot(df_centers, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Best Center/Defensive Player") +
xlab("Player") +
ylab("Average (SPG, BPG, RPG)") +
coord_flip()
# Create the plot for forwards
plot_forwards <- ggplot(df_forwards, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "green") +
ggtitle("Best Forward/Offensive Player (Average > 5)") +
xlab("Player") +
ylab("Average (PPG, APG, TPG)") +
coord_flip()
# Print the plots
print(plot_centers)
rm(list = ls())
library(readr)
library(ggplot2)
setwd("C:/Users/nazif/Desktop/")
df <- read_csv("C:/Users/nazif/Desktop/nbastats.csv")
# filtering through the columns and rows
player_data <- read.csv("nbastats.csv", stringsAsFactors = FALSE)
pos_index <- which(names(player_data) == "POS")
centers <- player_data[player_data$POS == "C", ]
forwards <- player_data[player_data$POS == "F", ]
center_stats_list <- list()
# made a loop to calculate centers average statistics
for (i in 1:nrow(centers)) {
player <- centers[i, ]
avg_stats <- colMeans(player[c("SPG", "BPG", "RPG")], na.rm = TRUE)
player_name <- player$NAME
avg_combined <- mean(avg_stats)
center_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
#sorted and printed averages in new list
center_stats_sorted <- center_stats_list[order(sapply(center_stats_list, function(x) x[2]), decreasing = TRUE)]
cat("Top 3 Centers:\n")
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, center_stats_sorted[[i]][1], center_stats_sorted[[i]][2]))
}
# repeating the same process for all forwards
forward_stats_list <- list()
for (i in 1:nrow(forwards)) {
player <- forwards[i, ]
avg_stats <- colMeans(player[c("PPG", "APG", "TPG")], na.rm = TRUE)  # Adjusted column names
player_name <- player$NAME
avg_combined <- mean(avg_stats)
forward_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
forward_stats_sorted <- forward_stats_list[order(sapply(forward_stats_list, function(x) x[2]), decreasing = TRUE)]
# graph cant fit all the forwards so I made it show only people who averaged 5 and up
df_forwards_filtered <- data.frame(Player = sapply(forward_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(forward_stats_sorted, `[[`, 2)))
df_forwards_filtered <- df_forwards_filtered[df_forwards_filtered$Average > 5, ]
df_forwards_filtered <- df_forwards_filtered[order(df_forwards_filtered$Average, decreasing = TRUE), ]
# Print the top 3 players with their averages
cat("\nTop 3 Forwards:\n")
top_3_forwards <- head(df_forwards_filtered, 3)
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, top_3_forwards$Player[i], top_3_forwards$Average[i]))
}
# Created data frames showing the averages for center and forward players
df_centers <- data.frame(Player = sapply(center_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(center_stats_sorted, `[[`, 2)))
df_forwards <- data.frame(Player = df_forwards_filtered$Player,
Average = df_forwards_filtered$Average)
# plot for centers
plot_centers <- ggplot(df_centers, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Best Center/Defensive Player") +
xlab("Player") +
ylab("Average (SPG, BPG, RPG)") +
coord_flip()
# plot for forwards
plot_forwards <- ggplot(df_forwards, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "green") +
ggtitle("Best Forward/Offensive Player (Average > 5)") +
xlab("Player") +
ylab("Average (PPG, APG, TPG)") +
coord_flip()
# Print the plots
print(plot_centers)
print(plot_forwards)
rm(list = ls())
library(readr)
library(ggplot2)
setwd("C:/Users/nazif/Desktop/")
df <- read_csv("C:/Users/nazif/Desktop/nbastats.csv")
# filtering through the columns and rows. Can change positions in the "" to whatever info user wants.
player_data <- read.csv("nbastats.csv", stringsAsFactors = FALSE)
pos_index <- which(names(player_data) == "POS")
centers <- player_data[player_data$POS == "C", ]
forwards <- player_data[player_data$POS == "F", ]
center_stats_list <- list()
# made a loop to calculate centers average statistics. Can change all the "inputs" to averages different stats.
for (i in 1:nrow(centers)) {
player <- centers[i, ]
avg_stats <- colMeans(player[c("SPG", "BPG", "RPG")], na.rm = TRUE)
player_name <- player$NAME
avg_combined <- mean(avg_stats)
center_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
#sorted and printed averages in new list
center_stats_sorted <- center_stats_list[order(sapply(center_stats_list, function(x) x[2]), decreasing = TRUE)]
#using centers for this example, if user changes position they want to view it will still pop up as centers
#unless changed.
cat("Top 3 Centers:\n")
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, center_stats_sorted[[i]][1], center_stats_sorted[[i]][2]))
}
# repeating the same process for all forwards, Can change all the "inputs" to averages different stats.
forward_stats_list <- list()
for (i in 1:nrow(forwards)) {
player <- forwards[i, ]
avg_stats <- colMeans(player[c("PPG", "APG", "TPG")], na.rm = TRUE)  # Adjusted column names
player_name <- player$NAME
avg_combined <- mean(avg_stats)
forward_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}
forward_stats_sorted <- forward_stats_list[order(sapply(forward_stats_list, function(x) x[2]), decreasing = TRUE)]
# graph cant fit all the forwards so I made it show only people who averaged 5 and up
df_forwards_filtered <- data.frame(Player = sapply(forward_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(forward_stats_sorted, `[[`, 2)))
df_forwards_filtered <- df_forwards_filtered[df_forwards_filtered$Average > 5, ]
df_forwards_filtered <- df_forwards_filtered[order(df_forwards_filtered$Average, decreasing = TRUE), ]
# Print the top 3 players with their averages
cat("\nTop 3 Forwards:\n")
top_3_forwards <- head(df_forwards_filtered, 3)
for (i in 1:3) {
cat(sprintf("%d. %s: %s\n", i, top_3_forwards$Player[i], top_3_forwards$Average[i]))
}
# Created data frames showing the averages for center and forward players
df_centers <- data.frame(Player = sapply(center_stats_sorted, `[[`, 1),
Average = as.numeric(sapply(center_stats_sorted, `[[`, 2)))
df_forwards <- data.frame(Player = df_forwards_filtered$Player,
Average = df_forwards_filtered$Average)
# example plot for centers
plot_centers <- ggplot(df_centers, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "blue") +
ggtitle("Best Center/Defensive Player") +
xlab("Player") +
ylab("Average (SPG, BPG, RPG)") +
coord_flip()
# example plot for forwards
plot_forwards <- ggplot(df_forwards, aes(x = reorder(Player, -Average), y = Average)) +
geom_bar(stat = "identity", fill = "green") +
ggtitle("Best Forward/Offensive Player (Average > 5)") +
xlab("Player") +
ylab("Average (PPG, APG, TPG)") +
coord_flip()
# Print the plots
print(plot_centers)
