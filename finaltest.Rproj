rm(list = ls())
library(readr)
library(ggplot2)
setwd("C:/Users/nazif/Desktop/")

df <- read_csv("C:/Users/nazif/Desktop/nbastats.csv")

# filtering through the columns and rows. Can change positions in the "" to whatever info user wants listed in "df".
player_data <- read.csv("nbastats.csv", stringsAsFactors = FALSE)
pos_index <- which(names(player_data) == "POS")
centers <- player_data[player_data$POS == "C", ]
forwards <- player_data[player_data$POS == "F", ]

center_stats_list <- list()

# made a loop to calculate centers average statistics. Can change all the "inputs" to average different stats.
for (i in 1:nrow(centers)) {
  player <- centers[i, ]
  avg_stats <- colMeans(player[c("SPG", "BPG", "RPG")], na.rm = TRUE)
  player_name <- player$NAME
  avg_combined <- mean(avg_stats)
  center_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}

#sorted and printed averages in new list
center_stats_sorted <- center_stats_list[order(sapply(center_stats_list, function(x) x[2]), decreasing = TRUE)]

#centers for this example, will always say center unless the input is changed
cat("Top 3 Centers:\n")
for (i in 1:3) {
  cat(sprintf("%d. %s: %s\n", i, center_stats_sorted[[i]][1], center_stats_sorted[[i]][2]))
}

# repeating the same process for all forwards, Can change all the "inputs" to averages different stats. 
forward_stats_list <- list()

for (i in 1:nrow(forwards)) {
  player <- forwards[i, ]
  avg_stats <- colMeans(player[c("PPG", "APG", "TPG")], na.rm = TRUE)  # Adjusted column names
  player_name <- player$NAME
  avg_combined <- mean(avg_stats)
  forward_stats_list[[i]] <- c(Player = player_name, Average = avg_combined)
}

forward_stats_sorted <- forward_stats_list[order(sapply(forward_stats_list, function(x) x[2]), decreasing = TRUE)]

# graph cant fit all the forwards so I made it show only people who averaged 5 and up
# If inputs are change this whole part of code can be commented out if user wants to view the whole thing
df_forwards_filtered <- data.frame(Player = sapply(forward_stats_sorted, `[[`, 1),
                                   Average = as.numeric(sapply(forward_stats_sorted, `[[`, 2)))
df_forwards_filtered <- df_forwards_filtered[df_forwards_filtered$Average > 5, ]

df_forwards_filtered <- df_forwards_filtered[order(df_forwards_filtered$Average, decreasing = TRUE), ]

# Print the top 3 players with their averages
cat("\nTop 3 Forwards:\n")
top_3_forwards <- head(df_forwards_filtered, 3)
for (i in 1:3) {
  cat(sprintf("%d. %s: %s\n", i, top_3_forwards$Player[i], top_3_forwards$Average[i]))
}

# Created data frames showing the averages for center and forward players
df_centers <- data.frame(Player = sapply(center_stats_sorted, `[[`, 1),
                         Average = as.numeric(sapply(center_stats_sorted, `[[`, 2)))
df_forwards <- data.frame(Player = df_forwards_filtered$Player,
                          Average = df_forwards_filtered$Average)

# example plot for centers
plot_centers <- ggplot(df_centers, aes(x = reorder(Player, -Average), y = Average)) +
  geom_bar(stat = "identity", fill = "blue") +
  ggtitle("Best Center/Defensive Player") +
  xlab("Player") +
  ylab("Average (SPG, BPG, RPG)") +
  coord_flip()

# example plot for forwards
plot_forwards <- ggplot(df_forwards, aes(x = reorder(Player, -Average), y = Average)) +
  geom_bar(stat = "identity", fill = "green") +
  ggtitle("Best Forward/Offensive Player (Average > 5)") +
  xlab("Player") +
  ylab("Average (PPG, APG, TPG)") +
  coord_flip()

# Print the plots
print(plot_centers)
print(plot_forwards)
